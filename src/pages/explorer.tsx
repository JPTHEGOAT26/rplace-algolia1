import type { NextPage } from "next";
import algoliasearch from "algoliasearch";
import { createNullCache } from "@algolia/cache-common";

import Head from "next/head";

import styles from "../styles/Home.module.css";
import { InstantSearch } from "react-instantsearch-dom";
import { useEffect, useState } from "react";
import io from "socket.io-client";
import Header from "../components/header";
import { snaptshotType } from "../types/snaptshot";
import Canvas from "../components/canvas";
import { searchClient } from "../scripts/algolia";

const index = searchClient.initIndex("algolia_canvas_place_snapshots");

const Explorer: NextPage = () => {
  let hits: snaptshotType[] = [];
  const [allSnapshots, setAllSnapshots] = useState<snaptshotType[] | null>(
    null
  );
  const [maxSnapshot, setMaxSnapshot] = useState<number>(0);
  const [selectedSnapshot, setSelectedSnapshot] = useState<number>(0);

  const [userCount, setUserCount] = useState(0);

  useEffect(() => {
    const socket = io(
      process.env.NODE_ENV === "production"
        ? "https://rplace-algolia-heroku-server.herokuapp.com/"
        : "https://rplace-algolia-heroku-server.herokuapp.com/",
      { transports: ["websocket"] }
    );
    let currentCount = userCount;

    socket.on("connect", () => {
      console.log("connect");
    });

    socket.on("clients", (e) => {
      console.log("clients", e);
      setUserCount(e / 2);
      console.log(userCount);
    });

    socket.on("disconnect", () => {
      setUserCount(currentCount--);
      console.log("disconnect");
    });
  }, []);

  useEffect(() => {
    index
      .browseObjects({
        query: "",
        batch: (batch: any) => {
          hits = hits.concat(batch);
        },
      })
      .then(() => {
        setMaxSnapshot(hits.length - 1);
        setAllSnapshots(hits.reverse());
      });

    console.log(allSnapshots);
  }, []);
  return (
    <div className={styles.container}>
      <Head>
        <title>r/algoliaPixelWar</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.png" />
        <link
          crossOrigin="anonymous"
          href={`https://${process.env.NEXT_PUBLIC_ALGOLIA_APP_ID}-dsn.algolia.net`}
          rel="preconnect"
        />
      </Head>

      <Header userCount={userCount} currentHit={null} />

      <div>
        <InstantSearch
          indexName="algolia_canvas_place"
          searchClient={searchClient}
        >
          {allSnapshots && (
            <Canvas isSnapshot snapshot={allSnapshots[selectedSnapshot]} />
          )}

          <input
            type="range"
            name="explorer_range"
            id="explorer_range"
            min={0}
            max={maxSnapshot}
            onInput={(e) => {
              setSelectedSnapshot((e.target as any).value);
            }}
          />
        </InstantSearch>
      </div>
      <footer
        style={{ textAlign: "center", padding: "1em 0", lineHeight: "2" }}
      >
        A silly experiment by <a href="https://twitter.com/lukyvj">@lukyvj</a> -{" "}
        Fully powered by <a href="https://algolia.com">Algolia</a>
        <br />
        Check the code on{" "}
        <a href="https://github.com/LukyVj/rplace-algolia">GitHub</a> - Read
        about it{" "}
        <a href="#">
          <s>here</s>
        </a>
      </footer>
    </div>
  );
};

export default Explorer;
